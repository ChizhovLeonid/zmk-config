/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define MSMV 4

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [ / ]  |     |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&trans  &kp GRAVE     &kp Q  &kp W  &kp E        &kp R            &kp T          &kp Y        &kp U           &kp I        &kp O    &kp P     &mt RBKT LBKT  &trans
        &kp LCTRL     &kp A  &kp S  &kp D        &kp F            &kp G          &kp H        &kp J           &kp K        &kp L    &kp SEMI  &mt RCTRL SQT
        &kp LEFT_ALT  &kp Z  &kp X  &kp C        &kp V            &kp B          &kp N        &kp M           &kp COMMA    &kp DOT  &kp FSLH  &mt RALT BSLH
                                    &lt RSE TAB  &mt LSHFT SPACE  &lt LWR RET    &lt LWR ESC  &mt RSHFT BSPC  &lt RSE DEL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 / F12 |     |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp UNDER       &kp F1    &kp F2  &kp F3       &kp F4    &kp F5       &kp F6     &kp F7    &kp F8       &kp F9    &kp F10   &mt F12 F11      &trans
        &mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH     &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR     &kp LPAR  &kp RPAR  &mt RCTRL MINUS
        &mt LALT EQUAL  &kp N1    &kp N2  &kp N3       &kp N4    &kp N5       &kp N6     &kp N7    &kp N8       &kp N9    &kp N0    &trans
                                          &lt ADJ TAB  &trans    &trans       &trans     &trans    &lt ADJ DEL
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
            //       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
            //       | GUI  |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
            //                          |     |     | ADJ |   | ADJ |     |     |

            bindings = <
&trans  &none            &none  &none  &none   &kp K_VOLUME_UP    &kp K_NEXT          &none        &kp HOME  &kp PSCRN  &kp PG_UP  &none   &kp CAPS         &trans
        &mt LCTRL EQUAL  &none  &none  &none   &kp K_MUTE         &kp K_PLAY_PAUSE    &none        &kp LEFT  &kp UP     &kp RIGHT  &tog 4  &mt RCTRL K_APP
        &kp LWIN         &none  &none  &none   &kp K_VOLUME_DOWN  &kp K_PREVIOUS      &none        &kp END   &kp DOWN   &kp PG_DN  &none   &trans
                                       &trans  &trans             &lt ADJ RET         &lt ADJ ESC  &trans    &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
            //       |BT CLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 |BT CLR|
            //       |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                          |     |     |     |   |     |     |     |

            bindings = <
&sys_reset  &bootloader  &none         &none         &none         &none         &bt BT_CLR      &bt BT_CLR    &none         &none         &none         &none         &bootloader  &sys_reset
            &none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &none
            &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
                                                     &trans        &none         &trans          &trans        &none         &trans
            >;
        };

        mouse_layer {
            bindings = <
&none  &none      &none  &mwh SCROLL_LEFT  &mmv MOVE_UP    &mwh SCROLL_RIGHT  &mwh SCROLL_UP      &none    &none          &none       &none      &none   &none  &none
       &kp LCTRL  &none  &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &mwh SCROLL_DOWN    &none    &mkp LCLK      &mkp MCLK   &mkp RCLK  &tog 4  &none
       &kp LALT   &none  &none             &none           &none              &none               &none    &none          &none       &none      &none   &none
                                           &kp TAB         &kp LEFT_SHIFT     &kp ENTER           &kp ESC  &kp BACKSPACE  &kp DELETE
            >;
        };
    };
};
